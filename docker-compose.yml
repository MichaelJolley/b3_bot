version: '3.7'

services:
  shared:
    build: ./services/shared
    image: io-shared
    container_name: io-shared
    volumes:
      - /app/shared/node_modules
      - ./services/shared:/app/shared
    env_file:
      - .env

  admin:
    build:
      context: ./services/admin
      target: build
    image: io-admin
    container_name: io-admin
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/admin/node_modules
      - ./services/admin:/app/admin
    ports:
      - "5090:80"
      - "9220:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - mongo

  api:
    build:
      context: ./services/api
      target: build
    image: io-api
    container_name: io-api
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/api/node_modules
      - ./services/api:/app/api
    ports:
      - "5001:80"
      - "9221:9229"
    env_file:
      - .env
    depends_on:
      - shared

  chat:
    build:
      context: ./services/chat
      target: build
    image: io-chat
    container_name: io-chat
    init: true
    restart: always
    command: npm run debug
    volumes:
      - ./assets:/app/chat/dist/assets
      - /app/chat/node_modules
      - ./services/chat:/app/chat
    ports:
      - "5050:80"
      - "9222:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - hub
      - api
      - mongo

  chron:
    build:
      context: ./services/chron
      target: build
    image: io-chron
    container_name: io-chron
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/chron/node_modules
      - ./services/chron:/app/chron
    ports:
      - "5080:80"
      - "9223:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - api
      - hub

  hub:
    build:
      context: ./services/hub
      target: build
    image: io-hub
    container_name: io-hub
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/hub/node_modules
      - ./services/hub:/app/hub
    ports:
      - "5060:80"
      - "9224:9229"
    env_file:
      - .env
    depends_on:
      - shared

  logger:
    build:
      context: ./services/logger
      target: build
    image: io-logger
    container_name: io-logger
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/logger/node_modules
      - ./services/logger:/app/logger
    ports:
      - "9225:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - hub
      - mongo

  overlay:
    build:
      context: ./services/overlay
      target: build
    image: io-overlay
    container_name: io-overlay
    init: true
    restart: always
    ports:
      - "5000:80"
      - "9226:9229"
    env_file:
      - .env
    command: npm run debug
    volumes:
      - ./assets:/app/overlay/dist/wwwroot/assets
      - /app/overlay/node_modules
      - ./services/overlay:/app/overlay
    depends_on:
      - shared
      - hub

  streamnotes:
    build:
      context: ./services/stream-notes
      target: build
    image: io-streamnotes
    container_name: io-streamnotes
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/stream-notes/node_modules
      - ./services/stream-notes:/app/stream-notes
    ports:
      - "9227:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - api
      - hub

  user:
    build:
      context: ./services/user
      target: build
    image: io-user
    container_name: io-user
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/user/node_modules
      - ./services/user:/app/user
    ports:
      - "5070:80"
      - "9228:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - api
      - mongo

  repo:
    build:
      context: ./services/repo
      target: build
    image: io-repo
    container_name: io-repo
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/repo/node_modules
      - ./services/repo:/app/repo
    ports:
      - "9229:9229"
    env_file:
      - .env
    depends_on:
      - shared
      - api
      - mongo

  webhooks:
    build:
      context: ./services/webhooks
      target: build
    image: io-webhooks
    container_name: io-webhooks
    init: true
    restart: always
    command: npm run debug
    volumes:
      - /app/webhooks/node_modules
      - ./services/webhooks:/app/webhooks
    ports:
      - "9230:9229"
      - "8800:8800"
      - "4040:4040"
    env_file:
      - .env
    environment:
      - NGROK_ARCH=linuxia32
    depends_on:
      - shared
      - api
      - hub

  mongo:
    image: mongo:4.0
    container_name: mongo-db
    restart: always
    volumes:
      - "mongodata:/data/db"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongoex:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    depends_on:
      - mongo

volumes:
  mongodata:
